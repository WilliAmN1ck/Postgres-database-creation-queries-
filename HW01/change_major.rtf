{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 create or replace function changeMajor(studId integer, majId integer, facId integer) returns void as $$\
DECLARE\
	majorsOfferedByDept integer;\
	oldFacId integer;\
\
BEGIN\
	if facId IS NULL then\
		SELECT fid into facId FROM Student Where Sid = studId;\
	end if;\
	for majorsOfferedByDept in Select mid FROM Major\
	Where Major.Dcode = (Select DCode FROM Faculty Where Faculty.fid = FacId) LOOP\
		If majorsOfferedByDept = majId then\
			UPDATE Student mid = majId, fid = facId WHERE sid = studId;\
		end if;\
	end loop;\
END;\
$$ Language plpgsql;\
\
UPDATED~~~~~~~~~~~~~~~~~~~\
\
DECLARE\
	majorsOfferedByDept integer;\
	oldFacId integer;\
BEGIN\
	if facId IS NULL then\
		SELECT fid into oldFacId FROM Student Where Sid = studId;\
		for majorsOfferedByDept in Select mid FROM Major\
		Where Major.Dcode = (Select DCode FROM Faculty Where Faculty.fid = oldFacId) LOOP\
			If majorsOfferedByDept = majId then\
				UPDATE Student Set mid = majId WHERE sid = studId;\
			end if;\
		end loop;\
	else\
	for majorsOfferedByDept in Select mid FROM Major\
	Where Major.Dcode = (Select DCode FROM Faculty Where Faculty.fid = facId) LOOP\
		If majorsOfferedByDept = majId then\
			UPDATE Student Set mid = majId, fid = facId WHERE sid = studId;\
		end if;\
	end loop;\
	end if;\
END;\
		}