{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 create or replace function checkAdvisor() returns trigger AS $$\
Declare \
	depts_for_major varchar(3);\
	new_dept varchar(3);\
Begin\
	\
	select DCode into new_dept\
	From Faculty\
	Where Faculty.Fid = NEW.Fid;\
	\
\
	for depts_for_major in select DCode from Departments Natural Join Major\
			where Major.DCode = new_dept loop\
		if depts_for_major is NULL then\
			raise exception \'91% is not part of the student\'92s major\'92, NEW.Fid;\
			return OLD;\
		end if;\
		if depts_for_major = new_dept then 	\
			return NEW;\
		end if;\
	end loop;\
	return OLD;\
End;\
$$ Language plpgsql;\
CREATE TRIGGER newAdvisor\
    BEFORE INSERT OR UPDATE OF Fid\
    ON Student\
    FOR EACH ROW\
    EXECUTE PROCEDURE checkAdvisor();\
\
\
\
Declare \
	majorDepts varchar(3);\
	new_dept varchar(3);\
Begin\
	select DCode into new_dept\
	From Faculty\
	Where Faculty.Fid = NEW.Fid;\
	\
	for majorDepts in select DCode from Major\
			where Major.Dcode = new_dept loop\
	if majorDepts is NULL then\
		raise exception \'91% is not part of the student\'92s major\'92, NEW.Fid;\
		return OLD;\
	end if;\
		if majorDepts = new_dept then 	\
			return NEW;\
		end if;\
	end loop;\
	return OLD;\
End;\
		}